version: '3.9'

services:
  #db
  mongodb:
    image: mongo:latest
    container_name: CMPT353_mongodb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - db:/data/db/
      - ./server/mongo-init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_DATABASE: cmpt353db
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
    networks:
      app:
        aliases:
          - mongo
  mongo-express:
    image: mongo-express
    container_name: CMPT353_mongo-express
    restart: always
    ports:
      - 8089:8089
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
    networks:
      app:
        aliases:
          - mongo-express


  # team members
  mysql:
    image: mysql:latest
    container_name: cpmt353_project_team
    restart: always
    ports:
      - 3307:3306
    volumes:
      - ./server/mysql-init/team-init.sql:/docker-entrypoint-initdb.d/team-init.sql
      - team-db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: project
      MYSQL_DATABASE: team
    networks:
      app:
        aliases:
          - mysql
  client:
    build: ./client
    image: node_client:latest
      # set container name
    container_name: CMPT353_client
    depends_on:
      - mongodb
      - mysql
      - user-server
      #set environment
    environment:
      NODE_ENV: dev
      SERVER: user-server
      # The location of dockerfile to build this service
    ports:
      - 3000:3000
    stdin_open: true
    networks:
      app:
        aliases:
          - 'client'
#  # #server
  user-server:
    build: ./server
    image: node_server:alpine
     # set container name
    container_name: CMPT353_server
    depends_on:
      - mongodb
      - mysql
     #set environment
    stdin_open: true
    tty: true
    environment:
      NODE_ENV: dev
      MONGODB: mongodb
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
     # Ports to map, mapping our port 8080, to the port 8080 on the container
    ports:
      - 8080:8080
    networks:
      app:
        aliases:
         - 'user-server'

networks:
  app:
    driver: bridge

volumes:
  my-db:
    driver: local
  db:
    driver: local
  team-db:
    driver: local
