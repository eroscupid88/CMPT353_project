version: '3.9'

services:
  #db
  mongodb:
    image: mongo:latest
    container_name: ${PROJECT_NAME}_${DB_NAME}
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - db:/data/db/
      - ./server/mongo-init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_DATABASE: cmpt353db
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
    networks:
      app:
        aliases:
          - mongodb
  mongo-express:
    image: mongo-express
    container_name: ${PROJECT_NAME}_mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
    networks:
      app:
        aliases:
          - mongo-express
  # #server
  # server:
  #   build: ${SERVER_BUILD_LOCATION}
  #   image: node_server:latest
  #   # set container name
  #   container_name: ${PROJECT_NAME}_${SERVER_SERVICE_NAME}
  #   depends_on:
  #     - mongodb
  #   #set environment
  #   environment:
  #     NODE_ENV: ${APPLICATION_ENV}
  #   # Ports to map, mapping our port 8080, to the port 8080 on the container
  #   ports:
  #     - ${SERVER_PORT}:${SERVER_PORT}
  #   networks:
  #     app:
  #       aliases:
  #         - 'server'

  # mysqldatabase:

  # # client
  # client:
  #   build: ${CLIENT_BUILD_LOCATION}
  #   image: node_client:latest
  #   # set container name
  #   container_name: ${PROJECT_NAME}_${CLIENT_SERVICE_NAME}
  #   #set environment
  #   environment:
  #     NODE_ENV: ${APPLICATION_ENV}
  #   # The location of dockerfile to build this service
  #   ports:
  #     - ${CLIENT_PORT}:${CLIENT_PORT}
  #   networks:
  #     app:
  #       aliases:
  #         - 'client'

networks:
  app:
    driver: bridge

volumes:
  db:
    driver: local
